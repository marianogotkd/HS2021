<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GroupBox_Stock.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +TcCW9YAAAAASUVORK5CYII=
</value>
  </data>
</root>